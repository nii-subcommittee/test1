１．Gitのアカウント取得

２．クライアントPCへ、Gitクライアントツールをインストール

　　msysgitのインストール
　　　https://git-for-windows.github.io/
　　　https://github.com/git-for-windows/git/releases

　　　　※64ビット端末での検証結果ですが、
　　　　　Git-2.5.2-64-bit.exeまでは、nortonのインストール時の信頼性チェックでクリア済み
　　　　　2.5.3は、インストール時にチェックが発生します。（問題ないとは思われます）

　　参考サイト
　　　インストール作業は下記サイトで問題なく実施可能。
　　　http://moondoldo.com/DoldoWorkz/?Git%2FWindows%E3%81%A7%E4%BD%BF%E3%81%86%28msysgit%E3%83%BBTortoiseGit%29

　　　注意点
　　　　9.[Use OpenSSH] を選択し、[Next >] ボタンをクリックします。
　　　　は表示されなかった。

　　　　10.[Checkout as-is, commit as-is] を選択し、[Next >] ボタンをクリックします。
　　　　[Checkout Windows-style, commit Unix-style line endings]を選択しました。

３．クライアントPCへTortoiseGit をインストール
　　https://tortoisegit.org/download/

　　使用するOSにあわせて、どちらかをダウンロードしインストールする
　　　Download TortoiseGit 1.8.15.0 - 64-bit
　　　Download TortoiseGit 1.8.15.0 - 32-bit

　　Language Packsもあわせてインストールする

　　注意点
　　　OpenSSH,Git default SSH Clientを選択

４．SSH公開鍵の作成・登録

　　SSHの公開鍵を作成しGithubに登録する手順

　　参考サイト
　　http://monsat.hatenablog.com/entry/generating-ssh-keys-for-github

　　
　　１秘密鍵・公開鍵を作成する

　　　　ssh-keygen -t rsa -C "your_email@example.com"
　　　　パスフレーズの確認は、なしでそのままエンター
　　　　プロンプト内に記載の所定のディレクトリ内に
　　　　　id_rsa　　　秘密鍵
　　　　　id_rsa.pub　公開鍵
　　　　　known_hosts

　　　　　が作成される

　　２公開鍵をGithubに預ける
　　　　GitHub画面の、SSH Keysの設定ページにて
　　　　１で作成した公開鍵を登録する(サクラエディタなどでコピー＆ペースト)

５．TortoiseGitからのリポジトリへの接続設定

　　１クライアントPC内の適当なディレクトリにフォルダを作成する
　　２作成したフォルダを右クリックし、「Git Create repository here...」を選択
　　３フォルダ内で編集作業を行う想定なので、「Bareを生成」チェックは外しておく。

　　　"ディレクトリ名" を空のGitレポジトリとして初期化しました。と表示される。
　　　
　　　フォルダを右クリック→「TortoiseGit」→「設定」
　　　「Git」→「リモート」を選択

　　　　　リモート・・・任意の名前
　　　　　URL・・・設定したいリポジトリのURLを設定
　　　　　　　　　　GitHubの画面の右に、「SSH clone URL」がある。
　　　　　　　　　　その内容をコピー＆ペーストする
　　　　　Putty認証・・・作成した SSH の秘密鍵のファイルを選択

　　　「新規に追加保存」をクリック

　　　　　「新しく追加されたリモートからブランチをフェッチしますか？」は「いいえ」をクリック。

　　　「OK」をクリックしウィンドウを閉じる。

６．TortoiseGitからのクライアントへの反映
　　フォルダ内に適当なファイルを作成する
　　
　　フォルダを右クリック→「Gitコミット」
　　　コミットのメッセージを記載
　　　変更した項目に、作成したファイルが表示されるのでチェックを入れる
　　　「OK」をクリック

　　　　※これでクライアントPCのGitへ登録されます。

６．クライアントからのGitHubへの反映
　　フォルダを右クリック→「Git同期」
　　「プッシュ」ボタンをクリック
　　クライアントで作成したファイルが、GitHub側画面から参照できるようになったかを確認する。
　　